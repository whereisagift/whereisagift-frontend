name: Build and Push Next.js to GHCR

on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Кэшируем node_modules, чтобы не устанавливать зависимости заново
      - name: Cache Node Modules
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      # Кэшируем билд Next.js
      - name: Cache Next.js Build
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn`, `bun` or other package managers https://github.com/actions/cache/blob/main/examples.md or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build Next.js
        run: npm run build

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Prepare Build Artifacts
        run: tar -czf next-build.tar.gz .next node_modules package.json package-lock.json public

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: next-build.tar.gz

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/whereisagift/whereisagift-frontend
          TAG=${{ github.sha }}

          docker build -t $IMAGE_NAME:$TAG -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$TAG
          docker push $IMAGE_NAME:latest

      - name: Checkout whereisagift-devops repository
        uses: actions/checkout@v4
        with:
          repository: whereisagift/whereisagift-devops
          token: ${{ secrets.DEPLOY_TOKEN }}

      - name: Update frontend version in whereisagift-devops
        run: |
          BRANCH_NAME=${{ github.ref_name }}

          if [[ "$BRANCH_NAME" == "main" ]]; then
            VERSION_PATH="./frontend/production/version"
          else
            VERSION_PATH="./frontend/development/version"
          fi

          mkdir -p $(dirname "$VERSION_PATH")
          echo "FRONTEND_VERSION=$(git rev-parse --short HEAD)" > "$VERSION_PATH"

          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add "$VERSION_PATH"
          git commit -m "Update frontend version in $VERSION_PATH to $(git rev-parse --short HEAD)"
          git push
