name: Build and Push Next.js to GHCR

on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Кэшируем node_modules, чтобы не устанавливать зависимости заново
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        run: npm ci

      # Кэшируем билд Next.js
      - name: Cache Next.js Build
        uses: actions/cache@v3
        with:
          path: .next
          key: ${{ runner.os }}-next-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-next-build-

      - name: Build Next.js
        run: npm run build

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Prepare Build Artifacts
        run: tar -czf next-build.tar.gz .next node_modules package.json package-lock.json public

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: next-build.tar.gz

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/whereisagift/whereisagift-frontend
          TAG=${{ github.sha }}

          docker build -t $IMAGE_NAME:$TAG -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$TAG
          docker push $IMAGE_NAME:latest

      - name: Checkout whereisagift-devops repository
        uses: actions/checkout@v4
        with:
          repository: whereisagift/whereisagift-devops
          token: ${{ secrets.DEPLOY_TOKEN }}

      - name: Update frontend version in whereisagift-devops
        run: |
          echo "FRONTEND_VERSION=$(git rev-parse --short HEAD)" > ./frontend/version
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ./frontend/version
          git commit -m "Update frontend version to $(git rev-parse --short HEAD)"
          git push